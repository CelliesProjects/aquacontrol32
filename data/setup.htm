<!doctype HTML>
<html lang="en">
<head>
<title>Device setup</title>
<meta charset="utf-8">
<link rel="icon" href="data:;base64,iVBORw0KGgo=">  <!--prevent favicon requests-->
<style>
html, body{
  margin:0 auto;
  background-color:grey;
  text-align:center;
  width:1024px;
  font-variant: small-caps;
  font-size:20px;
}

body{
  opacity:0.4;
}

hr{
  margin:0;
}

h3{
  margin:0;
}

p{
  margin:0;
}

a {
  color: black;
  text-decoration: none;
  margin: 0 10px;
}

.webLink {
  color: #da1717;
}

.systemLink{
  padding: 3px 10px;
}

.systemLink:hover {
  background:grey;
}

.fileName a{
  display:block;
}

.shadowedBox  {
  box-shadow: 0px 0px 13px 0px rgba(0,0,0,1);
  border:solid 1px black;
  border-radius: 15px;
  margin:10px 0;
}

#titleBox{
}

#fileInput{
  display:block;
  width:300px;
  height:50px;
  border:solid 1px black;
}

.settingsBox{
  width:700px;
  margin:auto;
}

.item{
  width:100%;
  margin:10px 0;
  height:30px;
}

.itemName, .itemValue {
  float:left;
}

.itemName{
  width:60%
}

.itemValue{
  width:20%
}

.deleteButton:hover{
  background:red;
  cursor:pointer;
}

#uploadBox{
}

input{
  margin:5px auto;
  vertical-align:middle;
  box-shadow: 0px 0px 2px 0px rgba(0,0,0,1);
  border-radius: 5px;
}

input[type="text"]{
    background: beige;
    width: 275px;
    height: 25px;
    margin: 0;
    vertical-align: middle;
    text-align: center;
    font-size: 16px;
    padding: 0;
}

input[type="button"]{
  height:30px;
  padding:5px 20px;
  margin:10px;
  border:solid 1px black;
}

input[type="range"]{
  width:18%;
  height:10px;
  box-shadow:unset;
}

</style>
<script src="https://code.jquery.com/jquery-3.2.1.js"></script>
</head>
<body>
<p class="shadowedBox" style="background-color:beige;"><a class="systemLink" href="/">HOME</a><a class="systemLink" href="channels">CHANNELS</a><a class="systemLink" href="setup">SETUP</a><a class="systemLink" href="editor">EDITOR</a><a class="systemLink" href="filemanager">FILE MANAGER</a></p>
<div id="titleBox" class="shadowedBox">
  <h3>DEVICE SETUP</h3>
  <p>Control your lights and device.</p>
</div>
<div class="shadowedBox">
  <h3>LIGHT CONTROL</h3>
  <input id="lightsOn" type="button" value="LIGHTS ON" disabled/><input id="lightsOff" type="button" value="LIGHTS OFF" disabled/><input id="lightsProgram" type="button" value="PROGRAM" disabled/>
  <div id="lightStatus">&nbsp;</div>
</div>
<div class="shadowedBox">
  <h3>DEVICE CONTROL</h3>
  <div class="settingsBox">
    <p class="item"><span class="itemName">HOST NAME</span><span><input type="text" id="hostNameInput" value=""></span></p>
    <p class="item"><span class="itemName">PWM FREQUENCY</span><span id="pwmFreqValue" class="itemValue">&nbsp;</span><input type="range" id="pwmFreqSlider" value="400" min="2" max="1000"></p>
    <p class="item"><span class="itemName">PWM DEPTH</span><span id="pwmDepthValue" class="itemValue">&nbsp;</span><input type="range" id="pwmDepthSlider" value="1024" min="1024" max="10240" step="1024"></p>
    <p class="item"><span class="itemName"><a class="webLink" href="http://www.remotemonitoringsystems.ca/time-zone-abbreviations.php" target="_blank">TIME ZONE (EXAMPLES)</a></span><input type="text" id="timeZoneSlider"></span></p>
    <p class="item"><span class="itemName">NTP UPDATE FREQUENCY</span><span id="ntpUpdateValue" class="itemValue">0</span><input type="range" id="ntpUpdateSlider" value="21600" min="21600" max="86400" step="21600"></p>
    <p class="item"><span class="itemName">DISPLAY ORIENTATION</span><span id="oledValue" class="itemValue">&nbsp;</span><input type="range" id="oledSlider" min="0" max="1"></p>
  </div>
</div>
<div class="shadowedBox">
  <div class="settingsBox">
    <p class="item">SYSTEM START:&nbsp;&nbsp;<span id="bootTime"></span></p>
    <p class="item">FREE DISK SPACE:&nbsp;&nbsp;<span id="freeDiskSpace"></span></p>
  </div>
</div>
<script>

function formatBytes( bytes, decimals ) {
  if( bytes == 0 ) return '0 Bytes';
  var k = 1000,
    dm = decimals + 1 || 3,
    sizes = [ 'Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB' ],
    i = Math.floor(Math.log(bytes) / Math.log(k));
  return parseFloat( ( bytes / Math.pow( k, i ) ).toFixed( dm ) ) + ' ' + sizes[i];
}

$(document).ready( function() {

  //disable inputs until all values are loaded
  $('input').prop('disabled', true);
  //load the items one by one
  $.get( "/api/boottime", function( data ) {
    $('#bootTime').html( data );

    $.get( "/api/pwmfrequency", function( data ) {
      $('#pwmFreqSlider').val( data );
      $('#pwmFreqValue').html( data + "Hz" );

      $.get( "/api/pwmdepth", function( data ) {
        $('#pwmDepthSlider').val( data );
        $('#pwmDepthValue').html( data );

        $.get("/api/timezone", function( data ) {
          $('#timeZoneSlider').val( data );

          $.get("/api/status",function( data ) {
            var item = data.split(',');
            $('#lightStatus').html( item[6] );

            $.get("/api/ntpinterval",function( data ) {
              $('#ntpUpdateSlider').val( data );
              $('#ntpUpdateValue').html( data / 3600 + "h" );

              $.get("/api/diskspace",function( data ) {
                $('#freeDiskSpace').html( formatBytes( data ) );

                $.get("/api/hostname",function( data ) {
                  $('#hostNameInput').val(  data  );

                  $.get("/api/tftorientation", function( data ) {
                    $('#oledValue').html( data );
                    if ( data == 'normal' ) {
                      $('#oledSlider').val(0);
                    }
                    if ( data == 'upsidedown' ) {
                      $('#oledSlider').val(1);
                    }

                    $('input').prop('disabled', false); //and finally enable the inputs again
                    $('body').css('opacity','1'); // and show the page
                  });

                });

              });

            });

          });

        });

      });

    });

  });

  //event handlers

  $('#oledSlider').on('change', function( event ) {
    if ( $(this).val() == 0 ) $('#oledValue').html('normal');
    if ( $(this).val() == 1 ) $('#oledValue').html('upsidedown');
    $.get( "/api/tftorientation?tftorientation=" + $('#oledValue').html(), function( data ) {
      console.log( data );
      $('#lightStatus').html( "TFT ORIENTATION: " + data );
    });
  });

  $('#dstSlider').on('change', function( event ) {
    $.get( "/api/dststatus?newdststatus=" + $('#dstValue').html(), function( data ) {
      console.log( data );
    });
  });

  $('#dstSlider').on('input', function( event ) {
    if ( $(this).val() == 0 ) $('#dstValue').html('disabled');
    if ( $(this).val() == 1 ) $('#dstValue').html('enabled');
  });

  $('#lightsOn').on('click', function() {
    $.get( "/api/lightson", function( data ) {
      $("#lightStatus").html( data );
    });
  });

  $('#lightsOff').on('click', function() {
    $.get( "/api/lightsoff", function( data ) {
      $('#lightStatus').html( data );
    });
  });

  $('#lightsProgram').on('click', function() {
    $.get( "/api/lightsprogram", function( data ) {
      $('#lightStatus').html( data );
    });
  });

  $('#hostNameInput').on('input', function() {
    $( '#hostNameInput' ).css({'background':'beige'});
  });

  $('#hostNameInput').on('change', function( data ) {
    var newHostname = $(this).val();
    $.get( "/api/hostname?newhostname=" + newHostname )
      .done(function( data ){
        console.log( data );
        $( '#lightStatus' ).html( data + "<a href=\"http://" + newHostname + "\">Click here to go to " + newHostname + "</a>");
        $( '#hostNameInput' ).css({'background':'lightgreen'});
      })
      .fail(function( data ){
        console.log( data );
        $( '#lightStatus' ).html( "ERROR: " + data.responseText  );
        $( '#hostNameInput' ).css({'background':'red'});
      });
  });

  $('#pwmFreqSlider').on('input', function() {
    $('#pwmFreqValue').html( $(this).val() + "Hz" );
  });

  $('#pwmFreqSlider').on('change', function() {
    $.get( "/api/pwmfrequency?newpwmfrequency=" + $(this).val(), function( data ) {
      if ( data == 'Invalid PWM frequency' ) {
        //TODO: show a popup
        $('#lightStatus').html( data );
      }
    });
  });

  $('#pwmDepthSlider').on('input', function( ) {
    $('#pwmDepthValue').html( $(this).val() );
  });

  $('#pwmDepthSlider').on('change', function() {
    $.get( "/api/pwmdepth?newpwmdepth=" + $(this).val(), function( data ) {
      if ( data == 'ERROR - Invalid PWM depth' ) {
        //TODO: show a popup
        $('#lightStatus').html( data );
      }
    });
  });

  $('#timeZoneSlider').on('input', function( ) {
    if ( parseInt( $(this).val() ) > -1 ) {
      $('#timeZoneValue').html( "UTC+" + $(this).val() );
    } else {
      $('#timeZoneValue').html( "UTC" + $(this).val() );
    }
  });

  $('#timeZoneSlider').on('change', function( ) {
    $.get( '/api/timezone?newtimezone=' + $(this).val(), function( data ) {
      if ( data  == 'ERROR - Invalid timezone' ) {
        //TODO: show a popup
        $('#lightStatus').html( data );
      }
    });
  });

  $('#ntpUpdateSlider').on('change', function() {
    $.get( '/api/ntpinterval?newntpinterval=' + $(this).val(),function() {
      $.get("/api/ntplastsynctime",function( data ) {
        var lastSync = new Date( data * 1000 );
        $('#lastSyncTime').html( lastSync.toLocaleString() );
      });
    });
  });

  $('#ntpUpdateSlider').on('input', function( ) {
    $('#ntpUpdateValue').html( $(this).val() / 3600  + "h");
  });




});
</script>

</body>
</html>
