<!doctype HTML>
<html lang="en">
<head>
<title>File manager</title>
<meta charset="utf-8">
<link rel="icon" href="data:;base64,iVBORw0KGgo=">  <!--prevent favicon requests-->
<link href="https://fonts.googleapis.com/css?family=Roboto" rel="stylesheet">
<style>
html, body{
  margin:0 auto;
  background-color:grey;
  text-align:center;
  width:1024px;
  font-size:20px;
  font-family:'Roboto',sans-serif;
}
body{
  opacity:0.4;
}
#hostName {
  text-transform: uppercase;
  margin: 10px;
}
h3{
  margin:10px;
}
p{
  margin:0;
}
a {
  color: black;
  text-decoration: none;
  margin: 0 10px;
}
.systemLink{
  padding: 3px 10px;
}
.systemLink:hover {
  background:grey;
}
.fileName a{
  display:block;
  overflow:hidden;
  white-space:nowrap;
}
.shadowedBox  {
  box-shadow: 0px 0px 13px 0px rgba(0,0,0,1);
  border-radius: 15px;
  margin:10px 0;
  padding:2px;
}
#fileInput{
  display:block;
  width:300px;
  height:50px;
  border:solid 1px black;
}
#fileList{
  height: 200px;
  width: 700px;
  background-color: beige;
  margin: auto;
  overflow: auto;
}
.fileEntry{
  overflow:auto;
  width:100%;
}
.fileEntry:hover {
  background:yellow;
}
.fileLink{
  display:block;
}
.fileName, .fileSize, .deleteButton{
  float:left;
}
.fileName{
  width:60%;
}
.fileSize{
  width:20%;
  text-align:right;
}
.deleteButton{
  width:20%;
}
.deleteButton:hover{
  background:red;
  cursor:pointer;
}
button{
  margin:10px;
}
#uploadForm {
  width: 400px;
  margin: 0 auto;
  padding: 10px;
  text-align:center;
}
#uploadForm #fileSelection{
  width: 100%;
  height: 50px;
  border: solid 1px lightgrey;
}
#uploadProgressBar{
    margin: 10px;
}
#uploadFileButton{
  width: 100px;
  height: 30px;
  margin: 10px;
}
input{
  margin:5px auto;
  vertical-align:middle;
  box-shadow: 0px 0px 2px 0px rgba(0,0,0,1);
  border-radius: 5px;
}
input[type="file"]{
  background-color:beige;
  height:30px;
}
#uploadFileButton{
  height:30px;
  width:150px;
  padding:5px 20px;
  margin:10px;
}
</style>
<script src="https://code.jquery.com/jquery-3.2.1.js"></script>
</head>
<body>
<p class="shadowedBox" style="background-color:beige;"><a class="systemLink" href="/">HOME</a><a class="systemLink" href="channels">CHANNELS</a><a class="systemLink" href="setup">SETUP</a><a class="systemLink" href="editor">EDITOR</a> <a class="systemLink" href="logs">LOGS</a> <a class="systemLink" href="filemanager">FILE MANAGER</a></p>
<div class="shadowedBox">
  <h2 id="hostName">&nbsp;</h2>
  <p>Manage files.</p>
</div>
<div class="shadowedBox"><p id="diskSpace">&nbsp;</p></div>
<div id="fileBox" class="shadowedBox">
  <div id="fileList"></div>
  <div id="functionBox">
    <!--<input id="formatButton" type="button" value="FORMAT" />-->
    <!--<input id="deleteAllButton" type="button" value="DELETE ALL" />-->
  </div>
</div>
<div id="uploadBox" class="shadowedBox">
  <form id="uploadForm" enctype="multipart/form-data" method="post" action="api/upload">
  <input id="fileSelection" name="file" type="file" />
  <progress id="uploadProgressBar" value="0" max="0"></progress>
  <p id="statusLine"></p>
  <input id="uploadFileButton" type="submit" value="Upload" disabled="disabled"/>
  </form>
</div>
<script>

function formatBytes( bytes, decimals ) {
  if( bytes == 0 ) return '0 Bytes';
  var k = 1000,
    dm = decimals + 1 || 3,
    sizes = [ 'Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB' ],
    i = Math.floor(Math.log(bytes) / Math.log(k));
  return parseFloat( ( bytes / Math.pow( k, i ) ).toFixed( dm ) ) + ' ' + sizes[i];
}

function updateDiskspace() {
  $.get( "/api/getdevice?diskspace=", function( data ) {
  })
    .done( function( data ){
      diskSpace = parseInt( data );
      $('#diskSpace').html( formatBytes( diskSpace ) + " LEFT" );
    })
    .fail( function( data ){
      $( '#diskSpace' ).html( '<p class="fileName">ERROR GETTING DISKSPACE</p>' );
    });
}

function deleteFile(file){
  if ( confirm( "Are you sure you want to delete '" + file + "'?" ) ) {
    $('#fileList').html('<div><br>Deleting ' + file +  '...</div>');
    $.post( "/api/deletefile",
      {
        filename: file,
      },
    function( data ) {
     console.log( data );
    }).done( function( data ){
        $('#statusLine').html( data );
      })
      .fail( function( data ){
        $('#statusLine').html( 'ERROR ' + data );
      })
      .always( function( data ){
        readFiles();
      });
  }
}

function readFiles(){
  $( '#fileList' ).html( '' );
  $.get( "/api/getdevice?files=", function( data ) {
  })
  .done( function( data ) {
    var files = data.split( "\n" );
    files.sort();
    files.forEach( function( item ) {
      if ( item == "" ) { return; }
      thisFile = item.split( "," );
      if ( thisFile[0].startsWith("/") ) { thisFile[0] = thisFile[0].substring( 1 ) };
      $('#fileList').append( '<div class="fileEntry"><p class="fileName"><a href="' +
      thisFile[0] + '" target="_blank">' + thisFile[0] + '</a></p><p class="fileSize">' + thisFile[1] + '</p><p class="deleteButton" data-filename="' + thisFile[0] +'">DELETE</p></div>' );
    });
  })
  .fail( function( data ) {
    $( '#fileList' ).html( '<p class="fileName" style="width:100%;">NO FILES FOUND</p>' );
  })
  .always( function( data ) {
    updateDiskspace();
    $('body').css('opacity','1');
  });
}

const pickFile_Message = "Click or drop a file in the box to upload";
var diskSpace = 0;

$(document).ready( function() {
  $("#statusLine").html( pickFile_Message );
  $( '#hostName' ).load( "/api/getdevice?hostname=" );
  readFiles();
});

$( '#fileList' ).on( 'click', '.deleteButton', function() {
  deleteFile( this.getAttribute( "data-filename" ) );
});

$( ':file' ).on( 'change', function() {
  var file = this.files[0];
  if ( file.name == '' ) { return; }
  if ( file.size > diskSpace ) {
    alert( 'Not enough space left!\n' + formatBytes(diskSpace,2) + ' free.\n' + formatBytes( file.size, 2) + " in '" + file.name + "'" );
    $( '#fileSelection' ).val( "" );
    $( '#uploadFileButton' ).prop( "disabled", true );
  }
});

function uploadProgressHandler(event)
{
  var percent = (event.loaded / event.total) * 100;
  var progress = Math.round(percent);
  $("#statusLine").html(progress +"% uploaded... please wait");
  $( '#uploadProgressBar' ).attr({
    value: event.loaded,
    max: event.total
  });
}

function loadHandler(event)
{
  if ( event.target.responseText )
  {
    $("#statusLine").html( event.target.responseText );
  }
  else
  {
    $("#statusLine").html( pickFile_Message );
  }
  $('#uploadFileButton').val("Upload");
  $( '#uploadProgressBar' ).attr({
    value: 0,
    max: 0
  });
  readFiles();
}

function errorHandler(event){
  $("#statusLine").html("Upload failed");
}

function abortHandler(event){
  $("#statusLine").html("Upload aborted");
}

$('#fileSelection').on( 'change', function(){
  if ( $('#fileSelection').val() != "" ) {
    $('#uploadFileButton').val("Upload").prop( 'disabled', false );
  }
  else
  {
    $('#uploadFileButton').val("Upload").prop( 'disabled', true );
  }
});

$("#uploadFileButton").click(function(event)
{
  event.preventDefault();
  if ( $( '#fileSelection' ).val() == "" ) { return; }
  $.post( '/api/upload', function() {
    var str = $('#fileSelection').val();
    var filename = str.split( '\\' );
    $('#fileList').html( "<br><br><p>Uploading '" + filename.pop() + "'</p>" );
  })
    .done(function() {
      $('#uploadFileButton').val("Uploading...").prop( 'disabled', true );
      var file = $("#fileSelection")[0].files[0];
      $("#fileSelection").val("");
      var formData = new FormData();
      formData.append("file1", file);
      $.ajax({
        url: '/api/upload',
        method: 'POST',
        type: 'POST',
        data: formData,
        contentType: false,
        processData: false,
        xhr: function()
        {
          var xhr = new window.XMLHttpRequest();
          xhr.upload.addEventListener("progress",
                                      uploadProgressHandler,
                                      false
                                     );
          xhr.addEventListener("load", loadHandler, false);
          xhr.addEventListener("error", errorHandler, false);
          xhr.addEventListener("abort", abortHandler, false);
          return xhr;
        }
      });
    })
    .fail(function() {
      $('#statusLine').html( "Not logged in." );
    })
    .always(function( data ){
    });
});
</script>

</body>
</html>
