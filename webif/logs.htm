<!doctype HTML>
<html lang="en">
<head>
<title>Showlog</title>
<meta charset="utf-8">
<link rel="icon" href="data:;base64,iVBORw0KGgo=">  <!--prevent favicon requests-->
<style>
html, body{
  margin:0 auto;
  background-color:grey;
  text-align:center;
  width:1024px;
	font-variant: small-caps;
  font-size:20px;
}

a {
  color: black;
  text-decoration: none;
  margin: 0 10px;
}

h3{
  margin:0;
}

.systemLink{
  padding: 3px 10px;
}

.systemLink:hover {
  background:grey;
}

p{
  margin:0;
}

.shadowedBox {
  box-shadow: 0px 0px 13px 0px rgba(0,0,0,1);
  border:solid 1px black;
  border-radius: 15px;
  margin:10px 0;
}

#barsBox{
  background-color: black;
  height: 350px;
  position : relative;
  margin:auto;
  cursor: default;
  //unselectable
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -khtml-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

.bar{
  position : absolute;
  width: 18%;
  bottom: 34px;
  left:0;
  height:0%;
  margin:  1%;
  display : inline-block;
  text-align:center;
  background-color: white;
  border-top: solid 1px rgba(255,255,255,1) ;
  border-bottom: solid 1px rgba(255,255,255,1) ;
  border-radius: 10px;
}

.pct, .name{
  position : absolute;
  width: 18%;
  margin: 1%;
  display : inline-block;
  text-align:center;
}

.pct p, .name p{
  background-color: grey;
  width: 90%;
  margin: auto;
  border-radius: 4px;
  border: solid 1px black;
}

#hostName {
  text-transform: uppercase;
}

#tempBox{
  display:none;
}

.tempStr {
  display:inline-block;
  margin:0 30px;
}

#editorCanvas{
  background-color:darkgreen;
  border:solid 1px black;
  display:inline-block;
  float:left;
  margin:0;
}

#sideBox{
  width:210px;
  height:400px;
  border:solid 1px black;
  background-color:green;
  //display:inline-block;
  float:right;
  //overflow:hidden;
  margin:0;
}

#fileList{
  //overflow-y: scroll;
  width:100%;
}
.logFile:hover{
  background-color: yellow;
}

.testButton{
  width:50%;
  height:30px;
}
</style>
<script src="https://code.jquery.com/jquery-3.2.1.js"></script>
<body>
<script>

</script>
<p class="shadowedBox" style="background-color:beige;"><a class="systemLink" href="/">HOME</a><a class="systemLink" href="channels">CHANNELS</a><a class="systemLink" href="setup">SETUP</a><a class="systemLink" href="editor">EDITOR</a> <a class="systemLink" href="logs">LOGS</a> <a class="systemLink" href="filemanager">FILE MANAGER</a></p>
<div class="hostName shadowedBox"><h3 id="hostName">Loading...</h3></div>
<canvas class="shadowedBox" id="editorCanvas" width="800px" height="400px"></canvas>
  <div id="sideBox" class="shadowedBox">
    <p id="rangeStatus">range</p>
    <p><button class="testButton rangeButton">RANGE-</button><button class="testButton rangeButton">RANGE+</button></p>
    <p id="baseStatus">base</p>
    <p><button class="testButton baseButton">CENTER-</button><button class="testButton baseButton">CENTER+</button></p>
    <div id="fileList"></div>
  </div>
<script>
//https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API/Tutorial
//https://www.w3schools.com/tags/ref_canvas.asp

//const hostName = 'http://192.168.0.198';
const hostName = '';

var bootCount = 0;

var rangeBottom = 15;
var rangeTop    = 25;

function map( x,  in_min,  in_max,  out_min,  out_max)
{
  return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;
}

function drawLogFile( url )
{
  $.get( url, function( data )
  {
    bootCount = 0;
    var measurements = data.split('\n');
    var grapArea = document.getElementById( 'editorCanvas' );
    var ctx = grapArea.getContext( "2d" );
    ctx.clearRect(0, 0, grapArea.width, grapArea.height);
    drawGraph( measurements, grapArea, "rgba( 0,255,0, 0.5)", 1, rangeBottom, rangeTop, true );
    drawGraph( measurements, grapArea, "rgba( 0,0,255, 0.5)", 2, rangeBottom, rangeTop, false );
    drawGraph( measurements, grapArea, "rgba( 255,0,0, 0.5)", 3, rangeBottom, rangeTop, false );
    measurements.forEach( function( item, index )
    { 
      if ( item.indexOf( 'Aquacontrol32 start' ) > 0  )
      {
       bootCount++;
      }
    });
    
    if ( bootCount )
    {
      url += " - System reboots: " + bootCount;
    }
    ctx.textBaseline="bottom"; 
    ctx.textAlign="left"; 
    ctx.strokeStyle = 'rgba( 255, 255, 255, 0.9 )';
    ctx.strokeText( url, 10,  grapArea.height - 10 );
  });
}

function drawGraph( data, canvas, color, sensor, mintemp, maxtemp, legend )
{
  const opacity = 0.3;
  const lineDash = [ 2, 2 ];
  var ctx = canvas.getContext( "2d" );
  ctx.beginPath();

  if ( legend )
  {
    ctx.strokeStyle = 'rgba( 255, 165, 0, ' + opacity + ')';
    ctx.font = '15px serif';
 
    for ( hour = 0; hour < 25; hour++ )
    {
      var x = map( hour, 0, 24, 0, canvas.width );
      ctx.moveTo( x, 0 );
      ctx.lineTo( x, canvas.height );
      ctx.setLineDash([]);
      ctx.textBaseline="middle"; 
      ctx.textAlign="center";
      ctx.strokeText( hour + "h", x, 10 );
      ctx.strokeText( hour + "h", x, canvas.height / 2 );
      ctx.strokeText( hour + "h", x, canvas.height - 10 );
      ctx.setLineDash( lineDash );
    }
    ctx.stroke();
    ctx.beginPath();
    ctx.strokeStyle = 'rgba( 255,255,255, '+ opacity+ ')';
    for ( templine = rangeBottom; templine <= rangeTop; templine++ )
    {
      var y = map( templine, rangeBottom, rangeTop, canvas.height, 0 );
      ctx.moveTo( 0, y );
      ctx.lineTo( canvas.width, y );
      var tempstr = parseInt( map( y, 0, canvas.height, maxtemp, mintemp ) );
      tempstr += "째";
      ctx.setLineDash([]);
      ctx.textBaseline="middle"; 
      ctx.textAlign="center";
      ctx.strokeText( tempstr, 20, y );
      ctx.strokeText( tempstr, canvas.width / 2, y );
      ctx.strokeText( tempstr, canvas.width - 20, y );
      ctx.setLineDash( lineDash) ;
    }
    ctx.stroke();
    ctx.beginPath();
  }
  ctx.setLineDash([]);
  ctx.strokeStyle = color;

  var closeLine = true;
  for ( p = 0; p < data.length; p++ )
  {
    var temp = data[ p ].split(',');
    var date = new Date( temp[0] * 1000 );

    if ( isNaN( date.getTime() ) )
    {
       closeLine = true;
    }
    else
    {
      var secondsToday = date.getHours() * 3600;
      secondsToday += date.getMinutes() * 60;
      secondsToday += date.getSeconds();

      var y = map( temp[ sensor ], mintemp, maxtemp, canvas.height, 0 );
      var x = map( secondsToday, 0, 86400, 0, canvas.width );
      if ( closeLine )
      {
        ctx.moveTo( x, y );
        closeLine = false;
      }
      ctx.lineTo( x, y );
    }
  }
  ctx.stroke();
}

var currentFile = 0;

$( document ).ready( function() {
  var fileArray;
  showRange();
  showBase();


  $.get( hostName + "/api/getdevice?hostname=")
    .done(function( data ){
      $( "#hostName" ).html( data + " LOG FILES");
      document.title = data.toUpperCase();
      $.get( hostName + '/api/getdevice?files=', function( data )
      {
        fileArray = data.split('\n');
        fileArray.sort();
        for ( f = 0; f < fileArray.length; f++ )
        {
          if ( fileArray[f].substring( 11, 15 ) == '.log' )
          {
            $('#fileList').append( '<div class="logFile">'+ fileArray[f].substring( 1, 11 ) + "</div>" );
          }
        }
        currentFile = $('.logFile').last().index('.logFile');
        $('.logFile').last().click();
      });
    })
});

$('#sideBox').on( 'click', '.logFile', function()
{
  $( '.logFile' ).css( { "background-color" : "" } );
  $(this).css( { "background-color" : "darkgreen" } );
  var newurl = hostName + '/';
  newurl += $( this ).html() + '.log';
  currentFile = $( this ).index('.logFile');
  drawLogFile( newurl );
});

function showRange()
{
  $('#rangeStatus').html(  rangeBottom + "째 - " + rangeTop  + "째" );
}

$('.rangeButton').on( 'click', function()
{
  if ( $(this).index() == 0 )
  {
    rangeBottom++;
    rangeTop--;
  } else
  {
    rangeBottom--;
    rangeTop++;
  }
  showRange();
  $('.logFile').eq( currentFile ).click();
});

function showBase()
{
  $('#baseStatus').html( ( rangeTop - ( rangeTop - rangeBottom ) / 2 ) + "째" );
}

$('.baseButton').on( 'click', function()
{
  if ( $(this).index() == 0 )
  {
    rangeBottom--;
    rangeTop--;
  } else
  {
    rangeBottom++;
    rangeTop++;
  }
  showBase();
  showRange();
  $('.logFile').eq( currentFile ).click();
});

</script>
</body>
</html>
