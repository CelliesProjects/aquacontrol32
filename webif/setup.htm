<!doctype HTML>
<html lang="en">
<head>
<meta charset="utf-8">
<link rel="icon" href="data:;base64,iVBORw0KGgo=">  <!--prevent favicon requests-->
<style>
html, body{
  margin:0 auto;
  background-color:grey;
  text-align:center;
  width:1024px;
  font-variant: small-caps;
  font-size:20px;
  font-family: monospace;
}
body{
  opacity:0.4;
}
hr{
  margin:0;
}
h3{
  margin:10px;
}
p{
  margin:0;
}
a {
  color: black;
  text-decoration: none;
  margin: 0 10px;
}
.webLink {
  color: #da1717;
}
.systemLink{
  padding: 3px 10px;
}
.systemLink:hover {
  background:grey;
}
.fileName a{
  display:block;
}
.shadowedBox  {
  box-shadow: 0px 0px 13px 0px rgba(0,0,0,1);
  border-radius: 15px;
  margin:10px 0;
  padding:2px;
}
#hostName{
  text-transform:uppercase;
  margin:10px;
}
.settingsBox{
  width:800px;
  margin:auto;
}
.item{
  width:100%;
  margin:10px 0;
  height:30px;
}
.itemName, .itemValue {
  float:left;
  line-height: 30px;
}
.itemName{
  width:41%
}
.itemValue{
  width:20%;
  margin:0 30px;
}
.deleteButton:hover{
  background:red;
  cursor:pointer;
}
input{
  margin:5px auto;
  vertical-align:middle;
  box-shadow: 0px 0px 2px 0px rgba(0,0,0,1);
  border-radius: 5px;
  font-family: monospace;
  font-size:15px;
}
input[type="text"], input[type="password"]{
    background: beige;
    height: 25px;
    margin: 0;
    vertical-align: middle;
    text-align: center;
    padding: 0;
}
input[type="button"]{
  height:30px;
  width:150px;
  padding:5px 20px;
  margin:0 10px;
}
input[type="range"]{
  width:18%;
  height:10px;
  box-shadow:unset;
}
.oledBar, .tftBar{
  display:none;
}
#diskSpaceBar{
  display:none;
}
input#timeZoneTextBox{
  width:450px;
}
.sensorBar{
  display:none;
}
input.sensorNameInput, input#hostNameInput, input#passwordInput{
  width:250px;
}
</style>
<script src="https://code.jquery.com/jquery-3.2.1.js"></script>
</head>
<body>
<p class="shadowedBox" style="background-color:beige;"><a class="systemLink" href="/">HOME</a><a class="systemLink" href="channels">CHANNELS</a><a class="systemLink" href="setup">SETUP</a><a class="systemLink" href="editor">EDITOR</a> <a class="systemLink" href="logs">LOGS</a> <a class="systemLink" href="filemanager">FILE MANAGER</a></p>
<div id="titleBox" class="shadowedBox">
  <h2 id="hostName">&nbsp;</h2>
  <p class="item">Light and device setup.</p>
</div>
<div class="shadowedBox">
  <h3>LIGHT SETUP</h3>
  <p class="item"><span id="lightStatus"></span></p>
  <p class="item"><input id="lightsOn" type="button" value="LIGHTS ON" disabled/><input id="lightsOff" type="button" value="LIGHTS OFF" disabled/><input id="lightsProgram" type="button" value="LIGHTS AUTO" disabled/></p>
</div>
<div class="shadowedBox">
  <h3>SETUP WARNINGS/MESSAGES</h3>
  <p class="item"><span id="deviceStatus">Only authorized users can change settings.</span></p>
</div>
<div class="shadowedBox">
  <h3>DEVICE SETUP</h3>
  <div class="settingsBox">
    <p class="item"><span class="itemName">TIME ZONE <a class="webLink" href="http://www.remotemonitoringsystems.ca/time-zone-abbreviations.php" target="_blank">(EXAMPLES)</a></span><input type="text" id="timeZoneTextBox"></span></p>
    <p class="item"><span class="itemName">HOST NAME</span><span><input type="text" id="hostNameInput" value=""></span></p>
    <p class="item sensorBar"><span class="itemName">SENSOR 1 NAME</span><span><input type="text" class="sensorNameInput" value=""></span></p>
    <p class="item sensorBar"><span class="itemName">SENSOR 2 NAME</span><span><input type="text" class="sensorNameInput" value=""></span></p>
    <p class="item sensorBar"><span class="itemName">SENSOR 3 NAME</span><span><input type="text" class="sensorNameInput" value=""></span></p>
    <!--<p class="item"><span class="itemName">PWM FREQUENCY</span><span id="pwmFreqValue" class="itemValue">&nbsp;</span><input type="range" id="pwmFreqSlider" value="100" min="100" max="10000"></p>-->
    <!--<p class="item"><span class="itemName">PWM DEPTH</span><span id="pwmDepthValue" class="itemValue">&nbsp;</span><input type="range" id="pwmDepthSlider" value="11" min="11" max="16" step="1"></p>-->
    <p class="item tftBar"><span class="itemName">TFT ORIENTATION</span><span id="tftOrientation" class="itemValue">&nbsp;</span><input type="range" id="tftOrientationSlider" min="0" max="1"></p>
    <p class="item tftBar"><span class="itemName">TFT MAX BRIGHTNESS</span><span id="tftBrightnessValue" class="itemValue">&nbsp;</span><input type="range" id="tftBrightnessSlider" value="11" min="0" max="100" step="1"></p>
    <p class="item oledBar"><span class="itemName">OLED ORIENTATION</span><span id="oledOrientationValue" class="itemValue">&nbsp;</span><input type="range" id="oledOrientationSlider" min="0" max="1"></p>
    <p class="item oledBar"><span class="itemName">OLED CONTRAST</span><span id="oledContrastValue" class="itemValue">&nbsp;</span><input type="range" id="oledContrastSlider" value="11" min="0" max="15" step="1"></p>
  </div>
</div>
<div class="shadowedBox">
  <h3>ADMIN SETUP</h3>
    <div class="settingsBox">
    <p class="item"><span class="itemName">CHANGE ADMIN PASSWORD</span><span><input type="password" id="passwordInput" value=""></span></p>
    <p class="item"><span class="itemName">LOG SENSOR ERRORS</span><input type="button" id="sensorLogging"></p>
    </div>
</div>
<div class="shadowedBox">
  <h3>DEVICE STATUS</h3>
  <div class="settingsBox">
    <p class="item" id="version"></p>
    <p class="item">SYSTEM START:&nbsp;&nbsp;<span id="bootTime"></span></p>
    <p class="item" id="diskSpaceBar">FREE DISK SPACE:&nbsp;&nbsp;<span id="freeDiskSpace"></span></p>
    <p class="item">PWM STATUS:&nbsp;&nbsp;<span id="pwmStatus"></span></p>
    <p class="item" id="wifissid"></p>
  </div>
</div>
<script>
function checkAuth( data )
{
  if ( data.status == 401 ) $( '#deviceStatus' ).html( "You are not authorized." )
  else $( '#deviceStatus' ).html( data.responseText );
}
function formatBytes( bytes, decimals ) {
  if( bytes == 0 ) return '0 Bytes';
  var k = 1000,
    dm = decimals + 1 || 3,
    sizes = [ 'Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB' ],
    i = Math.floor(Math.log(bytes) / Math.log(k));
  return parseFloat( ( bytes / Math.pow( k, i ) ).toFixed( dm ) ) + ' ' + sizes[i];
}
var getAllValues;
$(document).ready( function() {
  getAllValues = true;
  $.get( "/api/getdevice?hostname=" )
  .done(function( data ){
    $('#hostNameInput' ).val( data );
    $( '#hostName' ).html( data );
    document.title = data + " setup";
  })
  .fail(function( data ){
    $( '#deviceStatus' ).html( "Problem getting hostname." );
 })
  .always( function( data ){
    if ( getAllValues )
    {
      getOledOrientation();
    }
  });
});
function getOledOrientation(){
  $.get( "/api/getdevice?oledorientation=")
  .done( function( data ){
    $('.oledBar' ).show();
    $('#oledOrientationValue').html( data );
    if ( data == 'normal' ) $('#oledOrientationSlider').val(0);
    if ( data == 'upsidedown' ) $('#oledOrientationSlider').val(1);
  })
  .fail( function( data ){
    if ( data.status != 501 ) $( '#deviceStatus' ).html( data.statusText );
  })
  .always( function( data ){
    if ( getAllValues )
    {
      getOledContrast();
    }
  });
}
function getOledContrast(){
  $.get( "/api/getdevice?oledcontrast=")
  .done( function( data ){
    $('#oledContrastValue').html( data );
    $('#oledContrastSlider').val( data );
  })
  .fail( function( data ){
    if ( data.status != 501 ) $( '#deviceStatus' ).html( data.statusText );
  })
  .always( function( data ){
    if ( getAllValues )
    {
      getTftOrientation();
    }
  });
}

function getTftOrientation(){
  $.get( "/api/getdevice?tftorientation=")
  .done( function( data ){
    $('.tftBar' ).show();
    $('#tftOrientation').html( data );
    if ( data == 'normal' ) {
      $('#tftOrientationSlider').val(0);
    }
    if ( data == 'upsidedown' ) {
      $('#tftOrientationSlider').val(1);
    }
  })
  .fail( function( data ){
    if ( data.status != 501 ) $( '#deviceStatus' ).html( "Error getting tft orientation." );
  })
  .always( function( data ){
    if ( getAllValues )
    {
      getSensorLoggingStatus();
    }
  });
}

function getSensorLoggingStatus(){
  $.get("/api/getdevice?sensorlogging=")
  .done( function( data ){
    $('#sensorLogging').prop('value', data);
  })
  .fail( function( data ){
    console.log(data);
  })
  .always( function( data ){
    if ( getAllValues )
    {
      getTftMaxBrightness();
    }
  });
}

function getTftMaxBrightness(){
  $.get( "/api/getdevice?tftbrightness=")
  .done( function( data ){
    $('#tftBrightnessValue').html( parseInt( data ) + "%"  );
    $('#tftBrightnessSlider').val( data );
  })
  .fail( function( data ){
    if ( data.status != 501 ) $( '#deviceStatus' ).html( "Error getting tft brightness.");
  })
  .always( function( data ){
    if ( getAllValues )
    {
      getTimeZone();
    }
  });
}

function getTimeZone(){
  $.get( "/api/getdevice?timezone=")
  .done( function( data ){
    $('#timeZoneTextBox').val( data );
  })
  .fail( function( data ){
    $( '#deviceStatus' ).html( data.statusText );
  })
  .always( function( data ){
    if ( getAllValues )
    {
      getLightStatus();
    }
  });
}

function getLightStatus(){
  $.get( "/api/getdevice?status=")
  .done( function( data ){
    var item = data.split('\n');
    $('#lightStatus').html( item[6] );
    var sensor = 0;
    while ( item[7 + sensor] ){
      $('.sensorBar').eq( sensor ).show();
      var temp = item[7 + sensor].split(',');
      $('.sensorBar .itemName').eq( sensor ).prepend( temp[1].substring( 0,  temp[1].indexOf( "." ) + 2 ) + "Â°C - " );
      $('.sensorNameInput').eq( sensor ).val( temp[0] );
      sensor++;
    }
  })
  .fail( function( data ){
    $( '#deviceStatus' ).html( "Error getting lightstatus." );
  })
  .always( function( data ){
    if ( getAllValues ) getWifiSSID();
  });
}

function getWifiSSID(){
  $.get( "/api/getdevice?wifissid=")
  .done( function( data ){
    $('#wifissid').html( "WIFI NETWORK: " + data );
  })
  .fail( function( data ){
    $( '#wifissid' ).html( "Error getting wifi SSID: " + data.statusText );
  })
  .always( function( data ){
    if ( getAllValues ) getBootTime();
  });
}

function getBootTime(){
  $.get( "/api/getdevice?boottime=")
  .done( function( data ){
    $('#bootTime').html( data );
  })
  .fail( function( data ){
    $( '#deviceStatus' ).html( "Error getting boottime: " + data.statusText );
  })
  .always( function( data ){
    if ( getAllValues ) getDiskSpace();
  });
}

function getDiskSpace(){
  $.get( "/api/getdevice?diskspace=")
  .done( function( data ){
    $('#diskSpaceBar').show();
    $('#freeDiskSpace').html( formatBytes( data ) );
  })
  .fail( function( data ){
    if ( data.status != 501 ) $( '#deviceStatus' ).html( "Error getting diskspace: " + data.responseText );
  })
  .always( function( data ){
    if ( getAllValues ) getPwmDepth();
  });
}

function getPwmDepth(){
  $.get( "/api/getdevice?pwmdepth=")
  .done( function( data ){
    $('#pwmStatus').html( data + "bit - ");
  })
  .fail( function( data ){
    $( '#deviceStatus' ).html( "Error getting pwmdepth " + data.responseText );
  })
  .always( function( data ){
    if ( getAllValues ) getVersion();
  });
}

function getVersion()
{
  $.get( "/api/getdevice?version=")
  .done( function( data ){
    $('#version').html( data );
    var sketchVersion;
    if ( !data.substr( 0, data.search("-") ) ) sketchVersion = data;
    else sketchVersion = data.substr( 0, data.search("-") );
    $.getJSON("https://api.github.com/repos/CelliesProjects/aquacontrol32/releases/latest", function(data, status) {
      if (  status === "success" && sketchVersion != data.tag_name ) $( '#version' ).append( ' -<a href="https://github.com/CelliesProjects/aquacontrol32/releases/latest"  target="_blank">Latest release ' + data.tag_name + " on GitHub.</a>" );
    });
  })
  .fail( function( data ){
    $( '#deviceStatus' ).html( "Error getting version: " + data.responseText );
  })
  .always( function( data ){
    if ( getAllValues ) getPwmFrequency();
  });
}
function getPwmFrequency(){
  $.get( "/api/getdevice?pwmfrequency=")
    .done( function( data ){
      $('#pwmStatus').append( data + "Hz");
    })
    .fail( function( data ){
      $( '#deviceStatus' ).html( "Error getting pwmfrequency: " + data.responseText );
    })
    .always( function( data ){
      getAllValues = false;
      $('input').prop('disabled', false); /* and finally enable the inputs again */
      $('body').css('opacity','1');       /* and show the page */
    });
}

  /* event handlers */

$('#timeZoneTextBox, #hostNameInput, #passwordInput, .sensorNameInput').on('input', function() {
  $( this ).css({'background':'yellow'});
});

$('input').on( 'input', function() {
  $('#deviceStatus').html('');
});

$('input[type="button"]').on( 'click', function() {
  $('#deviceStatus').html('');
});

$('#passwordInput').on('change', function( event ) {
  if (!confirm("You are about to change the admin password.\nAre you sure?") ) {
    return;
  }
  $.post( "/api/setdevice",
  {
    password : $(this).val()
  })
  .done(function( data ){
    $( '#deviceStatus' ).html( data );
  })
  .fail(function( data ){
    checkAuth( data );
    $('#passwordInput').css({'background':'red'});
  });
});

$('#oledOrientationSlider').on('change', function( event ) {
  $(this).val() == 1  ? $('#oledOrientationValue').html( 'upsidedown' ): $('#oledOrientationValue').html( 'normal' );
  $.post( "/api/setdevice",
  {
    oledorientation : $('#oledOrientationValue').html()
  })
  .done(function(data) {
    $('#oledOrientationValue').html( data );
    console.log( data );
  })
  .fail(function( data ){
    console.log( data );
    checkAuth( data );
    getOledOrientation();
  });
});

$('#tftOrientationSlider').on('change', function( event ) {
  if ( $(this).val() == 0 ) $('#tftOrientation').html('normal');
  if ( $(this).val() == 1 ) $('#tftOrientation').html('upsidedown');
  $.post( "/api/setdevice",
  {
    tftorientation : $('#tftOrientation').html()
  })
  .done(function(data) {
    $('#tftOrientation').html( data )
  })
  .fail(function( data ){
    checkAuth( data );
    getTftOrientation();
  });
});

$('#lightsOn').on('click', function() {
  $.post( "/api/setdevice",
  {
    lightson : ""
  })
  .done(function(data) {
    $('#lightStatus').html( data );
  })
  .fail(function( data ){
    $( '#deviceStatus' ).html( data.statusText  );
  });
});

$('#lightsOff').on('click', function() {
  $.post( "/api/setdevice",
  {
    lightsoff : ""
  })
  .done(function(data) {
    $('#lightStatus').html( data );
  })
  .fail(function( data ){
    checkAuth( data );
  });
});

$('#lightsProgram').on('click', function() {
  $.post( "/api/setdevice",
  {
    lightsprogram : ""
  })
  .done(function(data) {
    $('#lightStatus').html( data );
  })
  .fail(function( data ){
    checkAuth( data );
  });
});

$('#hostNameInput').on('change', function( data ) {
  $('#deviceStatus').html("Checking network for hostname " + $(this).val() + "..." );
  $.post( "/api/setdevice",
  {
    hostname : $(this).val()
  })
  .done(function( data ){
    $( '#deviceStatus' ).html( "Hostname changed. <a href=\"http://" + data + ".local\">Click here to go to " + data + "</a>");
    $( '#hostNameInput' ).css({'background':'lightgreen'});
    $( '#hostName').html( data );
  })
  .fail(function( data ){
    console.log( data );
    checkAuth( data );
    $( '#hostNameInput' ).css({'background':'red'});
  });
});

$('#oledContrastSlider').on('input', function() {
  $('#oledContrastValue').html( $(this).val() );
});

$('#oledContrastSlider').on('change', function() {
  $.post( "/api/setdevice",
  {
    oledcontrast : $(this).val()
  })
  .done(function( data ){
    $('#oledContrastValue').html( data );
    $('#oledContrastSlider').val( data );
  })
  .fail(function( data ){
    checkAuth( data );
    getOledContrast();
  });
});

$('#tftBrightnessSlider').on('input', function() {
  $('#tftBrightnessValue').html( parseInt( $(this).val() ) + "%" );
});

$('#tftBrightnessSlider').on('change', function() {
  $.post( "/api/setdevice",
  {
    tftbrightness : $(this).val()
  })
  .done(function( data ){
    $('#tftBrightnessSlider').val( data );
  })
  .fail(function( data ){
    checkAuth( data );
    getTftMaxBrightness();
  });
});

$('#timeZoneTextBox').on('change', function( data ) {
  $.post( '/api/setdevice',
    {
      timezone: $(this).val(),
    })
    .done(function( data ) {
      $('#timeZoneTextBox').css( {'background':'lightgreen'} );
      $('#deviceStatus').html( 'Timezone set to ' + data );
    })
    .fail(function( data ) {
      checkAuth( data );
      $('#timeZoneTextBox').css( {'background':'red'} );
    });
}); /* last in chain setup */

$('#sensorLogging').on('click',function(data){
  $.post("/api/setdevice",
  {
    sensorlogging : $(this).val() === "OFF" ? "ON" : "OFF"
  })
  .done( function(data){
    $('#sensorLogging').prop('value',data);
    $('#deviceStatus').html('SENSOR LOGGING IS NOW '+data);
  })
  .fail( function(data){
    console.log(data);
  });
});

$('.sensorNameInput').on('change', function( data ) {
  var sensor = $(this).index('.sensorNameInput');
  $.post( "/api/setdevice",
  {
    sensorname : $(this).val(),
    number     : sensor
  })
  .done(function( data ){
    $( '#deviceStatus' ).html( "Sensorname changed to '" + data + "'" );
    $( '.sensorNameInput' ).eq( sensor ).css({'background':'lightgreen'});
  })
  .fail(function( data ){
    checkAuth( data );
    $( '.sensorNameInput' ).eq( sensor ).css({'background':'red'});
  });
});
</script>
</body>
</html>
